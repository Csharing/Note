$ git add path   
#提交文件，可提交多个文件以空格隔开

$ git commit -m "备注"
#提交事务，即创建一个版本

$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"
#为机器配置名字和email，global全局，也可为单独的仓库配置

$ cd /c/Users/HaSEE/learngit
#切换目录
$mkdir name
#当前目录下创建name文件夹
$cd name
#切换到当前目录下的name文件夹
$pwd
#显示当前命令行目录
$git init
#将当前文件夹变成仓库

win的记事本在每个文件开头添加了0xefbbbf（十六进制）的字符

$git status
#查看仓库状态
$ git diff new.txt
#查看修改了哪些内容

$git log
#查看所有的版本
$git log --pretty=oneline
#查看所有的版本，以版本号加备注的形式出现

$git reset --hard HEAD^
#,HEAD表示当前版本，回退到上一个版本，^表示上个，^^表示上上个，HEAD`100
$cat new.txt
#查看内容
$git reset --hard 6733044
#回退到以6733044开头的版本号，Git会自动查找
$git reflog
#查看所有执行过的命令，最后一个命令排在第一位

Git管理的是修改，对修改会有多种操作
$git checkout --new.txt
#工作区修改===撤回到最新的状态 优先级：暂存区》版本库
$git reset head new.txt
#暂存区修改===暂存区的修改回退到工作区，再用checkout修改

当你删除了一个文件时：
1、删除文件
$git rm new1.txt
$git commit -m "delete"
2、恢复文件
$git checkout --"new1.txt"

$ssh-keygen -t rsa -C "youremail@example.com"
#创建ssh-key

$git remote add origin git@github.com:Csharing/learngit.git
#关联远程库
$git push -u origin master 
#将本地库的内容推送到远程库，两个库的名字必须一致，两个库的合并不能有冲突
$git push origin master
#第一次用上面的命令，再提交就用本次命令


$git remote rm origin